/* Grid container: fill parent, no viewport units */
.resizable-frame-container {
    display: grid;
    grid-template-columns: 2fr 4px 3fr;
    grid-template-rows: 1fr 4px 1fr;
    width: 100%;
    height: 100%;
    overflow: hidden;
    gap: 0;
}

/* Columns & content */
.resizable-column {
    display: flex;
    flex-direction: column;
    flex-grow: 1;
    gap: 0.3125rem;
}

.resizable-content {
    display: flex;
    align-items: flex-start;
    justify-content: center;
    width: 100%;
    height: 100%;
    background-color: #272b30;
    padding: 0.625rem;
    font-size: 1rem;
}

.resizable-content-align-left {
    display: flex;
    flex-direction: column;
    justify-content: flex-start;
    align-items: flex-start;
}

.frame-component-message {
    background-color: lightsteelblue;
}

/* Visible separators: thin; hit-area made larger via ::before */
.resizable-separator {
    width: 100%;
    height: 2px;
    background-color: gray;
    position: relative;
}
.resizable-separator::before {
    content: "";
    position: absolute;
    left: 0; right: 0;
    top: -6px; bottom: -6px;
    cursor: row-resize;
}

.resizable-separator-vertical {
    width: 2px;
    background-color: gray;
    position: relative;
}
.resizable-separator-vertical::before {
    content: "";
    position: absolute;
    top: 0; bottom: 0;
    left: -6px; right: -6px;
    cursor: col-resize;
}

/* Custom resize handles (corners/edges) */
.resizable-handle-n,
.resizable-handle-s,
.resizable-handle-w,
.resizable-handle-e,
.resizable-handle-nw,
.resizable-handle-ne,
.resizable-handle-sw,
.resizable-handle-se {
    --handle-size: 0.625rem;
    position: absolute;
    width: var(--handle-size);
    height: var(--handle-size);
    background-color: #007bff;
    border-radius: 50%;
    opacity: 0.5;
    z-index: 1;
}

.resizable-handle-n {
    top: calc(var(--handle-size) / -2);
    left: 50%;
    transform: translateX(-50%);
    cursor: ns-resize;
}

.resizable-handle-s {
    bottom: calc(var(--handle-size) / -2);
    left: 50%;
    transform: translateX(-50%);
    cursor: ns-resize;
}

.resizable-handle-w {
    top: 50%;
    left: calc(var(--handle-size) / -2);
    transform: translateY(-50%);
    cursor: ew-resize;
}

.resizable-handle-e {
    top: 50%;
    right: calc(var(--handle-size) / -2);
    transform: translateY(-50%);
    cursor: ew-resize;
}

.resizable-handle-nw {
    top: calc(var(--handle-size) / -2);
    left: calc(var(--handle-size) / -2);
    cursor: nwse-resize;
}

.resizable-handle-ne {
    top: calc(var(--handle-size) / -2);
    right: calc(var(--handle-size) / -2);
    cursor: nesw-resize;
}

.resizable-handle-sw {
    bottom: calc(var(--handle-size) / -2);
    left: calc(var(--handle-size) / -2);
    cursor: nesw-resize;
}

.resizable-handle-se {
    bottom: calc(var(--handle-size) / -2);
    right: calc(var(--handle-size) / -2);
    cursor: nwse-resize;
}

/* Box + invisible edges for easier grabs along full sides */
.resizable-box { position: relative; }

.resizable-edge {
    position: absolute;
    z-index: 2;
    background-color: transparent;
}

.resizable-edge.left,
.resizable-edge.right {
    top: 0;
    bottom: 0;
    width: 0.75rem;
    cursor: col-resize;
}
.resizable-edge.left  { left: 0; }
.resizable-edge.right { right: 0; }

.resizable-edge.top,
.resizable-edge.bottom {
    left: 0;
    right: 0;
    height: 0.75rem;
    cursor: row-resize;
}
.resizable-edge.top    { top: 0; }
.resizable-edge.bottom { bottom: 0; }

/* Visual feedback while resizing */
.resizing { background-color: rgba(0, 0, 0, 0.2); }
